#!/bin/sh
# Copyright (c) 2012, Piotr Karbowski <piotr.karbowski@gmail.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are
# permitted provided that the following conditions are met:
#
#    * Redistributions of source code must retain the above copyright notice, this list
#      of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright notice, this list
#      of conditions and the following disclaimer in the documentation and/or other
#      materials provided with the distribution.
#    * Neither the name of the Piotr Karbowski nor the names of its contributors may be
#      used to endorse or promote products derived from this software without specific
#      prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
# THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE US
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This script suppose to preserve interfaces names.
# First it will run nameif to rename interfaces if configured in /etc/mactab
# Then it will dump known interfaces to new mactab file.
# Next it will parse old /etc/mactab and copy all interfaces which wasnt added in step two.
# On the end, it will replace /etc/mactab with the new one.

# Info: Step two will only care about eth*, wlan*, ath*, wifi* and ra* interfaces.

if [ -n "${USER}" ] && [ "${USER}" != 'root' ]; then
	echo "You need root to run it." >&2
	exit 1
fi

in_comma_list() {
	# Check whatever $1 is in the comma separated list $2.
        local x
        local check_for="$1"
	case ",$2," in
                *,"${check_for}",*)
                        return 0
                ;;
        esac
        return 1
}

lockfile='/etc/mactab.settle-nics_lockfile'
while : ; do
	if ! test -f "${lockfile}" && ( set -o noclobber; echo "$$" > "${lockfile}") 2> /dev/null; then
		break
	else
		sleep 1
	fi	
done

tmpfile="/etc/mactab.settle-nics_tmpfile.$$"
rm -f "${tmpfile}"
trap 'status="$?"; rm -f "${tmpfile}" "${lockfile}"; exit "${status}"' INT TERM EXIT

# Run nameif so all interfaces will be renamed to specified names before we start to mess with it.
if command -v nameif >/dev/null 2>&1 && test -f /etc/mactab; then
	nameif
fi

printf '%s\n' "# Generated by settle-nics from mdev-like-a-boss." >> "${tmpfile}"

# First get all the macs of current accessable nics
for i in /sys/class/net/*; do
	unset device macaddr
	device="${i##*/}"
	case "${device}" in
		eth[0-9]*|wlan[0-9]*|ath[0-9]*|wifi[0-9]*|ra[0-9]*)
			macaddr="$(cat /sys/class/net/${device}/address 2>/dev/null)"
			if [ -n "${macaddr}" ]; then
				macs="${macs},${macaddr}"
				printf '%-15s %s\n' "${device}" "${macaddr}" >> "${tmpfile}"
			fi
		;;
	esac
done

# Now lets parse current /etc/mactab so we no loose any configured but not available at this moment interface.
if [ -f '/etc/mactab' ]; then
	unset device macaddr
	while read device macaddr; do
		case "${device}" in
			eth[0-9]*|wlan[0-9]*|ath[0-9]*|wifi[0-9]*|ra[0-9]*)
				if [ -n "${macaddr}" ] && ! in_comma_list "${macaddr}" "${macs}"; then
					printf '%-15s %s\n' "${device}" "${macaddr}" >> "${tmpfile}"
				fi
			;;
		esac
	done < '/etc/mactab'
fi

case "$1" in
	'')
		mv "${tmpfile}" '/etc/mactab'
	;;
	'--dry-run')
		cat "${tmpfile}"
	;;
	*)
		echo "Wrong argument!" >&2
		exit 1
	;;
	
esac

exit 0
